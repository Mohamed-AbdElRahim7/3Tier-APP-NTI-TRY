pipeline {
  agent {
    docker {
      image 'hashicorp/terraform:1.8.2'
      args '-u root --entrypoint=""'
    }
  }

  environment {
    TF_IN_AUTOMATION = "true"
  }

  stages {
    stage('Clone Repo') {
      steps {
        git branch: 'main', url: 'https://github.com/Mohamed-AbdElRahim7/3Tier-APP-NTI-TRY.git'
        echo 'âœ… Finished cloning repository.'
      }
    }

    stage('Terraform Init') {
      steps {
        dir('terraform') {
          withCredentials([usernamePassword(
            credentialsId: 'aws-creds',
            usernameVariable: 'AWS_ACCESS_KEY_ID',
            passwordVariable: 'AWS_SECRET_ACCESS_KEY'
          )]) {
            sh '''
              export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
              export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
              terraform init
              terraform refresh
            '''
          }
          echo 'âœ… Terraform initialized.'
        }
      }
    }

    stage('Terraform Destroy - Node Group') {
      steps {
        dir('terraform') {
          withCredentials([usernamePassword(
            credentialsId: 'aws-creds',
            usernameVariable: 'AWS_ACCESS_KEY_ID',
            passwordVariable: 'AWS_SECRET_ACCESS_KEY'
          )]) {
            sh '''
              echo "ðŸ§¨ Destroying EKS Node Group..."
              export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
              export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
              terraform destroy -target=module.eks.aws_eks_node_group.default -auto-approve
            '''
          }
          echo 'âœ… Node Group destroyed.'
        }
      }
    }

    stage('Terraform Destroy - All Infrastructure') {
      steps {
        dir('terraform') {
          withCredentials([usernamePassword(
            credentialsId: 'aws-creds',
            usernameVariable: 'AWS_ACCESS_KEY_ID',
            passwordVariable: 'AWS_SECRET_ACCESS_KEY'
          )]) {
            sh '''
              echo "ðŸ”¥ Destroying ALL infrastructure..."
              export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
              export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
              terraform destroy -auto-approve
            '''
          }
          echo 'âœ… Everything destroyed.'
        }
      }
    }
  }
}
